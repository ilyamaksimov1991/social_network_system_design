openapi: 3.0.3
info:
  title: REST for social network (course System Design)
  description: 'Example REST for social network'
  version: 1.0.11

tags:
  - name: friends
    description: Operations about friends
  - name: profile
    description: User information
  - name: article
    description: articles
  - name: chat
    description: chat


paths:
  /friends/add:
    post:
      tags:
        - friends
      summary: Add a new friend for user
      description: Add a new friend for user
      operationId: addFriend
      parameters:
        - $ref: '#/components/parameters/SecurityToken'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: The ID of the user to be added as a friend.
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Заявка в друзья отправлена"
        '400':
          description: Error in request parameters
        '401':
          description: Not authorized
  /frieds/{user_id}:
    delete:
      parameters:
        - $ref: '#/components/parameters/SecurityToken'
        - $ref: '#/components/parameters/User'
      summary: Delete user in friends
      tags:
        - friends
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Друг был удален"
    get:
      parameters:
        - $ref: '#/components/parameters/SecurityToken'
        - $ref: '#/components/parameters/User'
      summary: Get friends
      tags:
        - friends
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'

  /profile/{user_id}:
    get:
      parameters:
        - $ref: '#/components/parameters/SecurityToken'
        - $ref: '#/components/parameters/User'
      summary: Get friends
      tags:
        - profile
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'

  /article:
    post:
      tags:
        - article
      summary: Add a new article
      description: Add a new article for user, passed in securityToken
      operationId: addArticle
      parameters:
        - $ref: '#/components/parameters/SecurityToken'
      requestBody:
        description: Add a new article
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '400':
          description: Invalid input
  /article/{articleId}/uploadMedia:
    post:
      tags:
        - article
      summary: uploads an media to an article
      description: ''
      operationId: uploadMedia
      parameters:
        - $ref: '#/components/parameters/SecurityToken'
        - name: articleId
          in: path
          description: ID of article to update
          required: true
          schema:
            type: integer
            format: int64
        - name: media
          in: query
          description: Media files
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Media upload
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  id:
                    type: string
                    example: "1234_4235"
        '400':
          description: Invalid input
        '405':
          description: Returns when decrypted user ID from security token not matched with article author user ID
  /article/{userId}:
    get:
      tags:
        - article
      summary: Get articles by userId
      description: Get articles by userId
      operationId: getArticleArray
      parameters:
        - $ref: '#/components/parameters/SecurityToken'
        - name: userId
          in: path
          description: User id for which is need to get articles
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
        '400':
          description: Invalid input


  /chats:
    parameters:
      - $ref: '#/components/parameters/SecurityToken'
    get:
      summary: Get chats
      tags:
        - chat
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chats'
  /chats/{chat_id}:
    parameters:
      - $ref: '#/components/parameters/SecurityToken'
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get chat
      tags:
        - chat
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chats'
  /chats/send/{chat_id}:
    parameters:
      - $ref: '#/components/parameters/SecurityToken'
      - $ref: '#/components/parameters/Chat'
    post:
      summary: Send message
      tags:
        - chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Текст
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
components:
  schemas:
    Profile:
      properties:
        status:
          type: string
          example: "success"
        data:
          type: object
          properties:
            user:
              type: object
              properties:
                id:
                  type: string
                  example: "123456"
                first_name:
                  type: string
                  example: "Павел"
                last_name:
                  type: string
                  example: "Дуров"

                photo:
                  type: string
                  example: "url"
                work:
                  type: string
                  example: "vk.com/link"
                city:
                  type: string
                  example: "Saint Petersburg"
                friend_count:
                  type: integer
                  format: int32
                  example: 500
                post_count:
                  type: integer
                  format: int32
                  example: 120
                bio:
                  type: string
                  example: "Основатель вк и телеграм"
                birthday:
                  type: string
                  format: date
                  example: "1984-10-10"
                education:
                  type: array
                  items:
                    type: object
                    properties:
                      school:
                        type: string
                        example: "Moscow High School"
                      year:
                        type: integer
                        format: int32
                        example: 2010
    Friends:
      properties:
        status:
          type: string
          example: "success"
        data:
          type: object
          properties:
            friends:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: "123456"
                  first_name:
                    type: string
                    example: "Павел"
                  last_name:
                    type: string
                    example: "Дуров"
                  photo:
                    type: string
                    example: "url"
    Article:
      properties:
        articleId:
          type: integer
          format: int64
          example: 12
        userId:
          type: integer
          format: int64
          example: 10
        createTimeStamp:
          type: string
          format: date-time
        title:
          type: string
          example: My journey
        content:
          type: string
          example: Hello. This is my journey
    Chats:
      properties:
        status:
          type: string
          example: "success"
        data:
          type: array
          items:
            type: object
            properties:
              chat_id:
                type: string
                example: "124124"
              last_message:
                type: object
                properties:
                  message_id:
                    type: string
                    example: "1241424"
                  sender_id:
                    type: string
                    example: "12214124"
                  sender_name:
                    type: string
                    example: "Павел Дуров"
                  sender_photo:
                    type: string
                    example: "url"
                  message_text:
                    type: string
                    example: "Я Паша"
                  message_time:
                    type: string
                    format: date-time
                    example: "2023-05-21T18:25:43-05:00"
                  message_read:
                    type: boolean
                    example: true
              members:
                type: array
                items:
                  type: object
                  properties:
                    member_id:
                      type: string
                      example: "52435"
                    member_name:
                      type: string
                      example: "Николай Дуров"
                    member_photo:
                      type: string
                      example: "url"
    Message:
      properties:
        status:
          type: string
          example: "success"
        message_id:
          type: string
          example: "1234"
        chat_id:
          type: string
          example: "214"
        sender_id:
          type: string
          example: "124"
        message_text:
          type: string
          example: "Как дела?"
        message_time:
          type: string
          format: date-time
          example: "2023-05-21T18:25:43-05:00"
  parameters:
    SecurityToken:
      name: securityToken
      in: header
      description: Encrypted token with called user's security info including userId
      required: true
      schema:
        type: string
    User:
      name: user_id
      in: path
      required: true
      schema:
        type: string
      description: Unique user id

    Chat:
      name: chat_id
      in: path
      required: true
      schema:
        type: string
      description: Уникальный id чата